spring.application.name=kafka-metrics

camel.component.kafka.brokers=localhost:9092
camel.component.kafka.group-id=kafka-grp1
#camel.component.kafka.producer.interceptorClasses= io.opentelemetry.instrumentation.kafka.kafkaClientTracing
#camel.component.kafka.consumer.interceptorClasses= io.opentelemetry.instrumentation.kafka.kafkaClientTracing
#management.metrics.export.otlp.enabled=true
spring.jmx.enabled= true

management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.health.ldap.enabled=false
#management.endpoints.web.base-path=/actuator
#management.endpoints.prometheus.enabled=true
management.endpoints.web.base-path=/

#enabling camel metrics to prometheus
#camel.component.metrics.enabled= true
#camel.component.metrics.metric-registry= prometheusMeterRegistry

#management.prometheus.metrics.export.pushgateway.base-url= http://localhost:9091
#management.prometheus.metrics.export.pushgateway.enabled= true
#management.prometheus.metrics.export.pushgateway.job= test-job
#management.prometheus.metrics.export.pushgateway.push-rate= 1m
#management.prometheus.metrics.export.pushgateway.shutdown-operation= DELETE

#management.metrics.export.kafka.enabled=true
#camel.metrics.enabled=true
#camel.metrics.binders=io.micrometer.core.instrument.binder.kafka.KafkaMetrics
#camel.component.kafka.metric-reporters=org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration

metrics.reporters=org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration

spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id=kafka-grp1

spring.main.allow-circular-references=true